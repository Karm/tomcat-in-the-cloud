<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>infinispan-test</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <mainClass>org.example.infinispan.Main</mainClass>
        <tomcat.version>8.5.12</tomcat.version>
        <infinispan.version>9.0.0.Final</infinispan.version>
        <kubernetes-ping.version>0.9.2</kubernetes-ping.version>


        <!-- Docker & Fabric8 Configs
        <docker.env.Main>${mainClass}</docker.env.Main>
        <docker.port.container.http>8080</docker.port.container.http>
 -->
        <!-- OpenShift service customization -->
        <fabric8.namespace>fabric8</fabric8.namespace>

        <!-- Readiness Probe -->
        <!--
        <fabric8.readinessProbe.httpGet.path>/api/health</fabric8.readinessProbe.httpGet.path>
        <fabric8.readinessProbe.httpGet.port>8080</fabric8.readinessProbe.httpGet.port>
        <fabric8.readinessProbe.initialDelaySeconds>5</fabric8.readinessProbe.initialDelaySeconds>
        <fabric8.readinessProbe.timeoutSeconds>30</fabric8.readinessProbe.timeoutSeconds>
         -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>${tomcat.version}</version>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-embedded</artifactId>
            <version>${infinispan.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jgroups.kubernetes</groupId>
            <artifactId>kubernetes</artifactId>
            <version>${kubernetes-ping.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>undertow-core</artifactId>
                    <groupId>io.undertow</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.example.infinispan.Main</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>3.3.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>resource</goal>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generator>
                        <includes>
                            <include>java-exec</include>
                        </includes>
                        <config>
                            <java-exec>
                                <jolokiaPort>0</jolokiaPort>
                                <prometheusPort>0</prometheusPort>
                                <webPort>8080</webPort>
                            </java-exec>
                        </config>
                    </generator>

                    <resources>
                        <env>
                            <OPENSHIFT_KUBE_PING_NAMESPACE>${fabric8.namespace}</OPENSHIFT_KUBE_PING_NAMESPACE>
                        </env>
                    </resources>

                    <enricher>
                        <config>
                            <fmp-service>
                                <name>${project.artifactId}</name>
                                <port>8080</port>
                            </fmp-service>
                        </config>
                    </enricher>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>